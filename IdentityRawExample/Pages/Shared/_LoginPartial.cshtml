@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@*@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService*@
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>

        @*@if ((AuthorizationService.AuthorizeAsync(User,null, "TwoFactorEnabled")).Result.Succeeded)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-page="/Account/Manage/Index">Hello @User.Identity.Name!</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-page="/Account/Manage/EnableAuthenticator"
                   id="tooltip-demo"
                   data-toggle="tooltip"
                   data-placement="bottom"
                   title="MFA is NOT enabled. This is required for the Admin Page. If you have activated MFA, then logout, login again.">
                    Admin (Not Enabled)
                </a>
            </li>
        }*@
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
